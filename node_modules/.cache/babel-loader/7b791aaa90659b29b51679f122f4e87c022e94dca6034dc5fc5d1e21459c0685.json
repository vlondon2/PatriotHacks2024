{"ast":null,"code":"var _jsxFileName = \"/home/vlondono/dev/PatriotHacks2024/src/components/BackgroundGrid3D.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n`;\n_c = CanvasContainer;\nconst BackgroundGrid3D = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    console.log(\"BackgroundGrid3D component mounted\");\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n    const gridSize = 20;\n    const gridStep = 2;\n    const gridGroup = new THREE.Group();\n    for (let x = -gridSize; x <= gridSize; x += gridStep) {\n      for (let y = -gridSize; y <= gridSize; y += gridStep) {\n        for (let z = -gridSize; z <= gridSize; z += gridStep) {\n          const geometry = new THREE.BoxGeometry(0.1, 0.1, 0.1);\n          const material = new THREE.MeshBasicMaterial({\n            color: 0x00ffff,\n            wireframe: true\n          });\n          const cube = new THREE.Mesh(geometry, material);\n          cube.position.set(x, y, z);\n          gridGroup.add(cube);\n        }\n      }\n    }\n    scene.add(gridGroup);\n    camera.position.set(15, 15, 15);\n    camera.lookAt(scene.position);\n    const animate = () => {\n      requestAnimationFrame(animate);\n      gridGroup.rotation.x += 0.001;\n      gridGroup.rotation.y += 0.002;\n      renderer.render(scene, camera);\n    };\n    animate();\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      console.log(\"Resizing 3D background grid to fit new window dimensions.\");\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      console.log(\"BackgroundGrid3D component unmounted\");\n      window.removeEventListener('resize', handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n      console.log(\"Cleaned up 3D background grid on component unmount.\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CanvasContainer, {\n    ref: mountRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 10\n  }, this);\n};\n_s(BackgroundGrid3D, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c2 = BackgroundGrid3D;\nexport default BackgroundGrid3D;\nvar _c, _c2;\n$RefreshReg$(_c, \"CanvasContainer\");\n$RefreshReg$(_c2, \"BackgroundGrid3D\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","styled","jsxDEV","_jsxDEV","CanvasContainer","div","_c","BackgroundGrid3D","_s","mountRef","console","log","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","alpha","setSize","current","appendChild","domElement","gridSize","gridStep","gridGroup","Group","x","y","z","geometry","BoxGeometry","material","MeshBasicMaterial","color","wireframe","cube","Mesh","position","set","add","lookAt","animate","requestAnimationFrame","rotation","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/vlondono/dev/PatriotHacks2024/src/components/BackgroundGrid3D.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\nimport styled from 'styled-components';\r\n\r\nconst CanvasContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nconst BackgroundGrid3D = () => {\r\n  const mountRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"BackgroundGrid3D component mounted\");\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    const gridSize = 20;\r\n    const gridStep = 2;\r\n    const gridGroup = new THREE.Group();\r\n\r\n    for (let x = -gridSize; x <= gridSize; x += gridStep) {\r\n      for (let y = -gridSize; y <= gridSize; y += gridStep) {\r\n        for (let z = -gridSize; z <= gridSize; z += gridStep) {\r\n          const geometry = new THREE.BoxGeometry(0.1, 0.1, 0.1);\r\n          const material = new THREE.MeshBasicMaterial({ color: 0x00ffff, wireframe: true });\r\n          const cube = new THREE.Mesh(geometry, material);\r\n          cube.position.set(x, y, z);\r\n          gridGroup.add(cube);\r\n        }\r\n      }\r\n    }\r\n\r\n    scene.add(gridGroup);\r\n\r\n    camera.position.set(15, 15, 15);\r\n    camera.lookAt(scene.position);\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      gridGroup.rotation.x += 0.001;\r\n      gridGroup.rotation.y += 0.002;\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n      console.log(\"Resizing 3D background grid to fit new window dimensions.\");\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      console.log(\"BackgroundGrid3D component unmounted\");\r\n      window.removeEventListener('resize', handleResize);\r\n      mountRef.current.removeChild(renderer.domElement);\r\n      console.log(\"Cleaned up 3D background grid on component unmount.\");\r\n    };\r\n  }, []);\r\n\r\n  return <CanvasContainer ref={mountRef} />;\r\n};\r\n\r\nexport default BackgroundGrid3D;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}